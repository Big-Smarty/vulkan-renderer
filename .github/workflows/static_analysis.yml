name: Static Analysis
on: [push, pull_request]

jobs:
  clang-tidy:
    name: Clang Tidy
    runs-on: ubuntu-latest
    container: ubuntu:rolling
    env:
      DEBIAN_FRONTEND: "noninteractive"
      CONAN_USER_HOME: "${{ github.workspace }}/conan/"
      CONAN_USER_HOME_SHORT: "${{ github.workspace }}/conan/s"
      inexor_conan_path: "$HOME/.local/bin"
    steps:
      - name: Update environment
        run: |
          # Update package lists
          apt update -qq

          # Install tools
          apt install -y \
            clang-tidy \
            cmake \
            curl \
            git \
            libgl1-mesa-dev \
            libx11-dev \
            libx11-xcb-dev \
            libxcb-dri3-dev \
            libxcb-icccm4-dev \
            libxcb-image0-dev \
            libxcb-keysyms1-dev \
            libxcb-randr0-dev \
            libxcb-render-util0-dev \
            libxcb-render0-dev \
            libxcb-shape0-dev \
            libxcb-sync-dev \
            libxcb-util-dev \
            libxcb-xfixes0-dev \
            libxcb-xinerama0-dev \
            libxcb-xkb-dev \
            ninja-build \
            parallel \
            pkg-config \
            python3 \
            python3-pip \
            xkb-data \
            xorg-dev

          pip3 install wheel setuptools
          pip3 install conan mako

      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache Conan Dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.CONAN_USER_HOME }}
          key: conan-${{ runner.os }}-Ubuntu GCC-Debug-${{ hashFiles('conanfile.py') }}

      - name: Configure CMake
        run: |
          export CC=gcc
          export CXX=g++
          export PATH="${{ env.inexor_conan_path }}":$PATH

          conan profile new default --detect --force
          conan profile update settings.compiler.libcxx=libstdc++11 default

          cmake . -Bbuild -DCMAKE_BUILD_TYPE=Debug -GNinja -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

      - name: Run clang-tidy
        run: |
          find example src \
            -name '*.cpp' \
            -print0 |
          parallel -0 \
            clang-tidy -p build --header-filter=inexor/ --quiet {} 2>/dev/null |
          tee output
          if [ -s output ]; then exit 1; fi

      - name: Clean Up Conan
        if: always()
        shell: bash
        run: |
          conan remove "*" -f --builds --src
          conan remove "*" -f --system-reqs
