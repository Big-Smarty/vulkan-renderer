
# Build Configuration for Travis CI
# https://travis-ci.org

dist: xenial
sudo: required
language: cpp

matrix:
  # Show final status immediately if a test fails.
  fast_finish: true
  include:
      env: VULKAN_BUILD_TARGET=ANDROID ANDROID_ABI=armeabi-v7a
    # Linux GCC debug build.
    - os: linux
      compiler: gcc
      env: VULKAN_BUILD_TARGET=LINUX
    # Linux clang debug build.
    - os: linux
      compiler: clang
      env: VULKAN_BUILD_TARGET=LINUX
    # Check for proper clang formatting in the pull request.
    - env: CHECK_FORMAT=ON

cache: ccache

# Use set -e so that the build fails when a command fails.
# The default action for Travis-CI is to continue running even if a command fails.
# See https://github.com/travis-ci/travis-ci/issues/1066.
# Use the YAML block scalar header (|) to allow easier multiline script coding.
# Install the desired CMake before running update_deps.py

before_install:
  - set -e
  - CMAKE_VERSION=3.10.2
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v${CMAKE_VERSION%.*}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz"
      echo CMAKE_URL=${CMAKE_URL}
      mkdir cmake-${CMAKE_VERSION} && travis_retry wget --no-check-certificate -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake-${CMAKE_VERSION}
      export PATH=${PWD}/cmake-${CMAKE_VERSION}/bin:${PATH}
    else
      brew install cmake || brew upgrade cmake
    fi
    cmake --version
  - |
    if [[ "$TRAVIS_EVENT_TYPE" == "cron" ]]; then
        # Add an option to update dependencies from master
        UPDATE_DEPS_EXTRA_OPTIONS="--ref=master"
    fi
  - |
    if [[ "$VULKAN_BUILD_TARGET" == "LINUX" ]]; then
      # Install the appropriate Linux packages.
      sudo apt-get -qq update
      sudo apt-get -y install libxkbcommon-dev libwayland-dev libxrandr-dev libx11-xcb-dev
      # Install dependencies
      python travis/update_deps.py --dir=external $UPDATE_DEPS_EXTRA_OPTIONS
    fi
  - |
  - export core_count=$(nproc || echo 4) && echo core_count = $core_count
  - set +e

script:
  - set -e
  - |
  - |
    if [[ "$VULKAN_BUILD_TARGET" == "LINUX" ]]; then
      mkdir build
      echo "Starting to build vulkan-renderer."
      cmake -DCMAKE_BUILD_TYPE=Debug CMakeLists.txt -B build
      make -j $core_count
      cd ..
    fi
  - |
  - set +e

notifications:
  email:
    recipients:
      - info@inexor.org
    on_success: change
    on_failure: always
